name: Lint, Test and Build Python package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # kézi futtatáshoz

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff build
      - name: Analysing the code with ruff
        run: |
          ruff check
      - name: Install necessary test dependencies and run pytest and make a coverage report
        run: |
          pip install -e '.[test]'
          coverage run
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: coverage.html
          publish_branch: gh-pages
  semver:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22 # Using a stable Node.js version

      - name: Install semantic-release/exec plugin
        run: npm install @semantic-release/exec -D

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13" # Match one of your build versions

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip
          pip install build wheel

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra_plugins: |
            @semantic-release/exec
